{% comment %}
  /**
   * @param {object} section - section object
   * @param {object} collection - collection object
   * @param {boolean} enable_sidebar - whether to enable sidebar
   * @param {boolean} enable_color_swatches - whether to enable color swatches
   * @param {boolean} enable_swatch_labels - whether to enable swatch labels
   * @param {tags_combine} tags_combine - whether to combine tags
   * @param {boolean} enable_sort - whether to enable sort
   * @param {boolean} collapse_filters - whether to collapse filters
   */
{% endcomment %}

{%- liquid
  assign show_sidebar = true

  if enable_sidebar == false or collection.filters.size == 0
    assign show_sidebar = false
  endif
-%}

{%- if enable_sidebar or enable_sort -%}
  {%- assign location = 'CollectionSidebar' -%}
  <div id="CollectionSidebar">
    <div class="collection-sidebar small--hide" id="CollectionSidebarFilterWrap">
      <div class="filter-wrapper">
        <ul class="no-bullets tag-list 6tag-list--active-tags">
          {%- for filter in collection.filters -%}
            {%- for filter_value in filter.active_values -%}
              <li class="tag tag--remove">
                <a class="btn btn--small js-no-transition" href="{{ filter_value.url_to_remove }}">
                  {{ filter_value.label | escape }}
                </a>
                {% render 'icon', name: 'close' %}
              </li>
            {%- endfor -%}
          {%- endfor -%}
        </ul>
        <!-- <div class="custmm_sidebar_2 custmm_sidebar_main"> -->
        {% comment %}
          <div class="" style="">
            <button
              type="button"
              class="collapsible-trigger collapsible-trigger-btn collapsible--auto-height tag-list__header"
              data-controls="CollectionSidebar-cst-1"
              data-collapsible-id="filter-availability-cst"
              aria-expanded="false"
            >
              <!-- <span class="collapsible-trigger__layout collapsible-trigger__layout--inline" id="toggle-button"> -->
              <span>Sub category</span
              ><span class="collapsible-trigger__icon collapsible-trigger__icon--open" role="presentation">
                <at-icon
                  src="//itfitzuk.myshopify.com/cdn/shop/t/2/assets/icon-chevron-down.svg?v=66558011826176374081714471089"
                  data-name="chevron-down"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    aria-hidden="true"
                    focusable="false"
                    role="presentation"
                    class="icon icon--wide icon-chevron-down"
                    viewBox="0 0 28 16"
                  >
                    <path fill="none" stroke="#000" stroke-width="2" d="m1.57 1.59 12.76 12.77L27.1 1.59"></path>
                  </svg>
                </at-icon>

                <script type="module">
                  import 'components/icon';
                </script>
              </span>
              <!-- </span> -->
            </button>
            <!-- Footer menu -->
            <div
              data-id="CollectionSidebar-cst-1"
              data-collapsible-id="filter-availability-cst"
              class="collapsible-content collapsible-content--all"
              style="height: 0px;"
            >
              <!-- <div id="toggle-content" class="cstm_checkbox"> -->
              <div class="collapsible-content__inner">
                <!--
                  {%- render 'subcollections',
                    current_tags: current_tags,
                    menu: linklists['subcat-menu'],
                    collection_grid_image: collection_grid_image,
                    collection_grid_shape: collection_grid_shape,
                    collection_grid_image_fill: collection_grid_image_fill,
                    collection_grid_color: collection_grid_color
                  -%}
                -->

                {%- render 'subcollections-new',
                  current_tags: current_tags,
                  menu: linklists['subcat-menu'],
                  collection_grid_image: collection_grid_image,
                  collection_grid_shape: collection_grid_shape,
                  collection_grid_image_fill: collection_grid_image_fill,
                  collection_grid_color: collection_grid_color
                -%}
              </div>
              <!-- </div> -->
            </div>
          </div>
        {% endcomment %}
        {%- liquid
          assign sort_title = 'actions.sort' | t
          assign sort_by = collection.sort_by | default: collection.default_sort_by
          assign sort_id = 'CollectionSidebarSort'
        -%}
        <div class="collection-sidebar__group collection-sidebar__group--sort medium-up--hide">
          {%- render 'collection-sidebar-filter-trigger',
            location: location,
            title: sort_title,
            index: sort_id,
            collapsed_state: true
          -%}

          <div
            data-id="{{ location }}-{{ sort_id }}"
            class="collapsible-content collapsible-content--all"
          >
            <div class="collapsible-content__inner">
              <ul class="no-bullets tag-list">
                {%- for option in collection.sort_options -%}
                  <li class="tag{% if option.value == sort_by %} tag--active{% endif %}">
                    <button type="button" data-value="{{ option.value }}" class="filter-sort">{{ option.name }}</button>
                  </li>
                {%- endfor -%}
              </ul>
            </div>
          </div>
        </div>

        {%- if enable_sidebar -%}
          <form class="filter-form">
            {%- for filter in collection.filters -%}
              {%- capture filter_id -%}filter-{{ filter.label | handleize }}{%- endcapture -%}
              {%- assign filter_index = forloop.index -%}
              {%- assign collapsed_state = collapse_filters -%}
              <div class="collection-sidebar__group--{{ filter_index }}">
                <div class="collection-sidebar__group">
                  {%- render 'collection-sidebar-filter-trigger',
                    id: filter_id,
                    location: location,
                    title: filter.label,
                    index: filter_index,
                    collapsed_state: collapsed_state
                  -%}
                  <div
                    data-id="{{ location }}-{{ filter_index }}"
                    data-collapsible-id="{{ filter_id }}"
                    class="collapsible-content collapsible-content--all{% unless collapsed_state %} is-open{% endunless %}"
                    {% unless collapsed_state %}
                      style="height: auto;"
                    {% endunless %}
                  >
                    {% assign current_collection_handle = collection.handle %}

                    <div class="collapsible-content__inner">
                      {%- case filter.type -%}
                        {%- when 'list', 'boolean' -%}
                          {%- case filter.presentation -%}
                            {%- when 'swatch' -%}
                              <ul class="no-bullets tag-list {% if tags_combine %} tag-list--checkboxes{% endif %}{% if is_color %} tag-list--swatches{% endif %}">
                                {%- for filter_value in filter.values -%}
                                  {% unless filter_collection.handle == current_collection_handle %}
                                    {% if filter_value.label contains 'at_' %}
                                      {% assign is_product_tag = true %}
                                      {% assign formatted_tag = filter_value.label | remove_first: 'at_' %}

                                      {% assign tag_id = formatted_tag | strip %}
                                      {% assign tag_text = 'tags.' | append: tag_id | replace: '-', '_' | t %}

                                      {% if tag_text contains 'Translation missing' %}
                                        {% continue %}
                                      {% endif %}
                                    {% endif %}

                                    <li class="tag tag--swatch {% if filter_value.active %}tag--active{% endif %} {% if enable_swatch_labels %}tag--show-label{% endif %}">
                                      <label
                                        for="tag-{{ filter_value.value | handle }}"
                                        class="tag__checkbox-wrapper text-label"
                                      >
                                        <input
                                          id="tag-{{ filter_value.value | handle }}"
                                          type="checkbox"
                                          class="tag__input"
                                          name="{{ filter_value.param_name }}"
                                          value="{{ filter_value.value }}"
                                          {% if filter_value.active %}
                                            checked
                                          {% endif %}
                                        >

                                        <span
                                          class="color-swatch color-swatch--filter color-swatch--{{ filter_value.label | handle }}"
                                          title="{{ filter_value.label }}"
                                          style="{% if filter_value.display.type == 'image' %}background-image: url({{ filter_value.display.value.src | image_url }} {% else %} background-color: {{ filter_value.display.value }};{% endif %});"
                                        >
                                          {% if is_product_tag and tag_text %}
                                            {{ tag_text }}
                                          {% else %}
                                            {{ filter_value.label }}
                                          {% endif %}
                                        </span>
                                        <span class="tag__text {% unless enable_swatch_labels %}hide{% endunless %}">
                                          {% if is_product_tag %}
                                            {% if tag_text %}
                                              <span class="product-tag__text">{{ tag_text | capitalize }}</span>
                                            {% endif %}
                                          {% else %}
                                            {{ filter_value.label }}
                                          {% endif %}
                                        </span>
                                      </label>
                                    </li>
                                  {% endunless %}
                                {%- endfor -%}
                              </ul>

                              <ul class="no-bullets tag-list {% if tags_combine %} tag-list--checkboxes{% endif %}{% if is_color %} tag-list--swatches{% endif %}">
                                {%- assign tag_count = filter.values.size -%}
                                {%- for filter_value in filter.values -%}
                                  {%- liquid
                                    assign tag_count = tag_count | plus: 1
                                    assign filter_value_index = forloop.index

                                    assign color_file_name = filter_value.label | handle | append: '.' | append: swatch_file_extension
                                    assign color_image = color_file_name | file_img_url: '50x50' | prepend: 'https:' | split: '?' | first
                                    assign color_swatch_fallback = filter_value.label | split: ' ' | last | handle
                                  -%}
                                {%- endfor -%}
                              </ul>
                            {%- when 'text' -%}
                              {%- liquid
                                assign is_color = false
                                assign swatch_file_extension = 'png'
                                if enable_color_swatches
                                  assign swatch_trigger = 'trigger.color_swatch' | t | downcase
                                  assign downcased_label = filter.label | downcase
                                  if downcased_label contains swatch_trigger
                                    assign is_color = true
                                  elsif swatch_trigger == 'color' and downcased_label contains 'colour'
                                    assign is_color = true
                                  endif
                                endif
                              -%}

                              <ul class="no-bullets tag-list testing">
                                {%- assign tag_count = filter.values.size -%}
                                {%- for filter_value in filter.values -%}
                                  {%- liquid
                                    assign tag_count = tag_count | plus: 1
                                    assign filter_value_index = forloop.index

                                    assign color_file_name = filter_value.label | handle | append: '.' | append: swatch_file_extension
                                    assign color_image = color_file_name | file_img_url: '50x50' | prepend: 'https:' | split: '?' | first
                                    assign color_swatch_fallback = filter_value.label | split: ' ' | last | handle
                                    assign is_product_tag = false
                                  -%}

                                  {% if filter_value.label contains 'at_' %}
                                    {% assign is_product_tag = true %}
                                    {% assign formatted_tag = filter_value.label | remove_first: 'at_' %}

                                    {% assign tag_id = formatted_tag | strip %}
                                    {% assign tag_text = 'tags.' | append: tag_id | replace: '-', '_' | t %}

                                    {% if tag_text contains 'Translation missing' %}
                                      {% continue %}
                                    {% endif %}
                                  {% endif %}
                                  {% assign current_collection_title = collection.title %}
                                  {% assign title_lower = current_collection_title | downcase | replace: '&amp; ', '' %}
                                  {% assign value_lower = filter_value.value | downcase | replace: '&amp; ', '' %}
                                  {% assign handle_without_hyphens = collection.handle | replace: '-', ' ' %}

                                  {% assign selected_item = collection.title %}
                                  {% assign submenu_items_string = "" %}
                                  {% assign parrent_menu = "" %}
{% for item in linklists.new-main-menu.links %} 
      {% assign submenu_items_string = submenu_items_string | append: item.title | downcase | append: ',' %}
      {% assign submenu_items_string = submenu_items_string | append: item.url | downcase | remove: '/collections/' | remove: '/pages/' | replace: '-', ' ' | append: ',' %}
  {% if item.title == selected_item %}
   
    {% for subitem in item.links %}
      {% if subitem.title == selected_item %}
      {% assign parrent_menu = item.title %}
      {% endif %}
      {% assign submenu_items_string = submenu_items_string | append: subitem.title | downcase | append: ',' %}
      {% assign submenu_items_string = submenu_items_string | append: subitem.url | downcase | remove: '/collections/' | remove: '/pages/' | replace: '-', ' ' | append: ',' %}
      {% if subitem.links.size > 0 %}
        {% for subsubitem in subitem.links %}
          {% assign submenu_items_string = submenu_items_string | append: subsubitem.title | downcase | append: ',' %}
          {% assign submenu_items_string = submenu_items_string | append: subsubitem.url | downcase | remove: '/collections/' | remove: '/pages/' | replace: '-', ' ' | append: ',' %}
        {% endfor %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endfor %}
                                  
{%- assign submenu_items = submenu_items_string | split: ',' -%}

                            <li class="{% for submenu_item in submenu_items %}{% if submenu_item == value_lower %}hide {% endif %}{% endfor %}{% if title_lower == value_lower or handle_without_hyphens == value_lower %} demo{% endif %} {{ parrent_menu }} Demotag tag{% if filter_value.active %} tag--active{% endif %}{% if is_color %} tag--swatch {% if enable_swatch_labels %}tag--show-label{% endif %}{% endif %}{% if filter_value.count == 0 %} hide{% endif %}">
                                    <label
                                      id="tag-{{ filter_value.value | handle }}"
                                      class="tag__checkbox-wrapper text-label"
                                      for="tagInput-{{ filter_value.param_name }}-{{ filter_value_index }}"
                                    >
                                      <input
                                        id="tagInput-{{ filter_value.param_name }}-{{ filter_value_index }}"
                                        type="checkbox"
                                        class="tag__input"
                                        name="{{ filter_value.param_name }}"
                                        value="{{ filter_value.value }}"
                                        {% if filter_value.active %}
                                          checked
                                        {% endif %}
                                      >
                                      {%- if is_color -%}
                                        <span
                                          class="color-swatch color-swatch--filter color-swatch--{{ filter_value.label | handle }}"
                                          title="{{ filter_value.label }}"
                                          style="background-color: {{ color_swatch_fallback }};{% if images[color_file_name] != blank %}  background-image: url({{ color_image }});{% endif %}"
                                        >
                                          {% if is_product_tag and tag_text %}
                                            {{ tag_text }}
                                          {% else %}
                                            {{ filter_value.label }}
                                          {% endif %}
                                        </span>
                                        <span class="tag__text {% unless is_color and enable_swatch_labels %}hide{% endunless %}">
                                          {{- filter_value.label | escape -}}
                                        </span>
                                      {%- else -%}
                                        <span class="tag__checkbox"></span>
                                        <span>
                                          <span class="tag__text">
                                            {% if is_product_tag %}
                                              {% if tag_text %}
                                                <span class="product-tag__text">{{ tag_text | capitalize }}</span>
                                              {% endif %}
                                            {% else %}
                                              {{ filter_value.label }}
                                            {% endif %}
                                          </span>
                                          ({{ filter_value.count }})
                                        </span>
                                      {%- endif -%}
                                    </label>
                                  </li>
                                {%- endfor -%}
                              </ul>

                              {%- if tag_count == 0 -%}
                                {%- style -%}
                                  .collection-sidebar__group--{{ filter_index }} { display: none; }
                                {%- endstyle -%}
                              {%- endif -%}
                            {%- else -%}
                              <ul class="no-bullets tag-list">
                                {%- assign tag_count = filter.values.size -%}
                                {%- for filter_value in filter.values -%}
                                  {%- liquid
                                    assign tag_count = tag_count | plus: 1
                                    assign filter_value_index = forloop.index
                                  -%}

                                  <li class="tag{% if filter_value.active %} tag--active{% endif %}{% if filter_value.count == 0 %} hide{% endif %}">
                                    <label
                                      id="tag-{{ filter_value.value | handle }}"
                                      class="tag__checkbox-wrapper text-label"
                                      for="tagInput-{{ filter_value.param_name }}-{{ filter_value_index }}"
                                    >
                                      <input
                                        id="tagInput-{{ filter_value.param_name }}-{{ filter_value_index }}"
                                        type="checkbox"
                                        class="tag__input"
                                        name="{{ filter_value.param_name }}"
                                        value="{{ filter_value.value }}"
                                        {% if filter_value.active %}
                                          checked
                                        {% endif %}
                                      >
                                      <span class="tag__checkbox"></span>
                                      <span>
                                        <span class="tag__text">{{ filter_value.label }}</span> (
                                        {{- filter_value.count -}}
                                        )
                                      </span>
                                    </label>
                                  </li>
                                {%- endfor -%}
                              </ul>

                              {%- if tag_count == 0 -%}
                                {%- style -%}
                                  .collection-sidebar__group--{{ filter_index }} { display: none; }
                                {%- endstyle -%}
                              {%- endif -%}
                          {%- endcase -%}
                        {%- when 'price_range' -%}
                          {% comment %} Comma code from Dawn {% endcomment %}
                          {% liquid
                            assign currencies_using_comma_decimals = 'ANG,ARS,BRL,BYN,BYR,CLF,CLP,COP,CRC,CZK,DKK,EUR,HRK,HUF,IDR,ISK,MZN,NOK,PLN,RON,RUB,SEK,TRY,UYU,VES,VND' | split: ','
                            assign uses_comma_decimals = false

                            if currencies_using_comma_decimals contains cart.currency.iso_code
                              assign uses_comma_decimals = true
                            endif

                            assign filter_min_value = filter.min_value.value | money_without_currency | replace: ',', ''
                            assign filter_max_value = filter.max_value.value | money_without_currency | replace: ',', ''
                            assign filter_range_min = filter.range_min | money_without_currency | replace: ',', ''
                            assign filter_range_max = filter.range_max | money_without_currency | replace: ',', ''

                            if uses_comma_decimals
                              if filter.min_value.value
                                assign filter_min_value = filter.min_value.value | money_without_currency | replace: '.', '' | replace: ',', '.'
                              endif

                              if filter.max_value.value
                                assign filter_max_value = filter.max_value.value | money_without_currency | replace: '.', '' | replace: ',', '.'
                              endif

                              assign filter_range_min = filter.range_min | money_without_currency | replace: '.', '' | replace: ',', '.'
                              assign filter_range_max = filter.range_max | money_without_currency | replace: '.', '' | replace: ',', '.'
                            endif
                          %}
                          {%- render 'price-range',
                            filter_min_value: filter_min_value,
                            filter_max_value: filter_max_value,
                            filter_range_min: filter_range_min,
                            filter_range_max: filter_range_max,
                            filter: filter,
                            hydration: 'on:idle'
                          -%}
                      {%- endcase -%}
                    </div>
                  </div>
                </div>
              </div>
            {%- endfor -%}
          </form>
        {%- endif -%}
      </div>
    </div>
  </div>

  {%- style -%}
            .grid-item.small--one-third.medium-up--one-sixth {
            width: 100%;
        }

        .collection-item__title {
        padding:unset !important;
          margin:unset !important;
          text-align:center;
          display:flex;
    }
            @media screen and (min-width: 769px) {
                  .collection-item {
        margin-bottom: 0px !important;
    }
              .collection-filter__item--drawer {
                display: none;
              }
              .collection-filter__item--count {
                text-align: left;
              }
              html[dir="rtl"] .collection-filter__item--count {
                text-align: right;
              }
            }
  {%- endstyle -%}
{%- endif -%}
<!--
  <script>
    // Get the button and content element
    const toggleButton = document.getElementById('toggle-button');
    const toggleContent = document.getElementById('toggle-content');

    // Add event listener for button click
    toggleButton.addEventListener('click', function() {
        // Toggle the display property of the content
        if (toggleContent.style.display === 'none') {
            toggleContent.style.display = 'block';
        } else {
            toggleContent.style.display = 'none';
        }
    });
  </script>
-->
<style>
  .cstm_checkbox{
    display:none;
  }
  .mystyle {
    display:block !important;
  }
</style>
{%- if show_sidebar == false -%}
  {% comment %}
    Disable sidebar & filter features
  {% endcomment %}
  {%- style -%}
    .collection-content .grid__item--sidebar,
    .search-content .grid__item--sidebar  {
      display: none;
    }
    .collection-content .grid__item--content,
    .search-content .grid__item--content {
      width: 100% !important;
    }
    {%- if enable_sort == false -%}
      .collection-filter__item--drawer {
        display: none;
      }
    {%- endif -%}
    .collection-filter__item--count {
      text-align: left;
    }
    html[dir="rtl"] .collection-filter__item--count {
      text-align: right;
    }
  {%- endstyle -%}
{%- endif -%}

{%- unless enable_sort -%}
  {%- style -%}
    .collection-filter__sort,
    .collection-sidebar__group--sort {
      display: none;
    }
  {%- endstyle -%}
{%- endunless -%}
